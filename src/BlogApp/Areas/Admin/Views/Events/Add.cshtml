@model BlogApp.Areas.Admin.Models.EventModel
@{
    bool IsError = false;
    bool IsMessage = false;
    string Message = "", Error = "";
    ViewBag.Title = "Yeni Etkinlik Ekle";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="Event-header">Etkinlik Ekle</h1>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Yeni Etkinlik Ekle
            </div>
            <div class="panel-body">
                @if (IsError)
                {
                    <div class="alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        @Error
                    </div>
                }
                else if (IsMessage)
                {
                    <div class="alert alert-success alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        @Message
                    </div>
                }
                <div class="row">
                    @using (Html.BeginForm("Add", "Events", new { area = "Admin" }, FormMethod.Post, true, new { role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="col-lg-10">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title)
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Title) })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description)
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 2, placeholder = Html.DisplayNameFor(model => model.Description) })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EventImage)
                                <input type="file" name="EventImage" id="EventImage" class="form-control" />
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Content)
                                @Html.TextAreaFor(model => model.Content, new { @class = "form-control tinymce", rows = 10, placeholder = Html.DisplayNameFor(model => model.Content) })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tags)
                                @Html.TextBoxFor(model => model.Tags, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Tags) })
                            </div>
                            <button type="submit" class="btn btn-success">Yeni Etkinlik Ekle</button>
                            <button type="reset" class="btn btn-danger">İptal</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Admin/vendor/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: '.tinymce',
            height: 500,
            theme: 'modern',
            plugins: [
              'advlist autolink lists link image charmap print preview hr anchor Eventbreak',
              'searchreplace wordcount visualblocks visualchars code fullscreen',
              'insertdatetime media nonbreaking save table contextmenu directionality',
              'emoticons template paste textcolor colorpicker textpattern imagetools codesample toc example'
            ],
            toolbar1: 'example | undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            toolbar2: 'print preview media | forecolor backcolor emoticons | codesample | code',
            image_advtab: true,
            templates: [
              { title: 'Test template 1', content: 'Test 1' },
              { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
              '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
              '//www.tinymce.com/css/codepen.min.css'
            ]
        });
    </script>
}